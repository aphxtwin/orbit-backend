services:
  nginx:
    image: nginx:stable
    container_name: orbit-backend-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - letsencrypt:/etc/letsencrypt
      - ./logs/nginx:/var/log/nginx
    restart: unless-stopped
    networks:
      - orbit-backend-network

  certbot:
    image: certbot/dns-cloudflare
    container_name: orbit-backend-certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - ./secrets:/secrets
    env_file:
      - .env
    depends_on:
      - nginx
    entrypoint: >
      sh -c "
      echo 'Creating credentials file...' &&
      echo \"dns_cloudflare_email = $${CLOUDFLARE_EMAIL}\" > /secrets/cloudflare.ini &&
      echo \"dns_cloudflare_api_key = $${CLOUDFLARE_API_KEY}\" >> /secrets/cloudflare.ini &&
      chmod 600 /secrets/cloudflare.ini &&
      echo 'Testing credentials...' &&
      if [ -z '$${CLOUDFLARE_EMAIL}' ] || [ -z '$${CLOUDFLARE_API_KEY}' ]; then
        echo 'ERROR: CLOUDFLARE_EMAIL or CLOUDFLARE_API_KEY is empty. Check your .env file.' && sleep 30;
      else
        echo 'Credentials found, generating certificates...' &&
        certbot certonly --dns-cloudflare --dns-cloudflare-credentials /secrets/cloudflare.ini --dns-cloudflare-propagation-seconds 30 --email $${LETSENCRYPT_EMAIL} --agree-tos --no-eff-email -d $${DOMAIN} -d *.$${DOMAIN} &&
        echo 'Certificates generated successfully. You can now switch nginx to use the full SSL config and restart the container.' ||
        (echo 'Certificate generation failed. Check logs above.' && sleep 30);
      fi
      "
    networks:
      - orbit-backend-network

  backend:
    build: .
    container_name: orbit-backend-backend
    expose:
      - "8080"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    volumes:
      - ./logs/backend:/app/logs
    networks:
      - orbit-backend-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  letsencrypt:
    driver: local

networks:
  orbit-backend-network:
    driver: bridge